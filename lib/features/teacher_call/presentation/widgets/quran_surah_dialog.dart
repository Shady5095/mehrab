import 'package:flutter/material.dart';
import 'package:mehrab/core/config/routes/extension.dart';

class QuranSurahDialog extends StatefulWidget {
  final Function(String surahName, int versesCount) onSurahSelected;
  final String? fromSurah;

  const QuranSurahDialog({
    super.key,
    required this.onSurahSelected,
    this.fromSurah,
  });

  @override
  State<QuranSurahDialog> createState() => _QuranSurahDialogState();
}

class _QuranSurahDialogState extends State<QuranSurahDialog> {
  final TextEditingController _searchController = TextEditingController();
  String _searchQuery = '';

  // üïã ŸÇÿßÿ¶ŸÖÿ© ÿßŸÑÿ≥Ÿàÿ±
  final List<Map<String, dynamic>> surahs = const [
    {"name": "ÿßŸÑŸÅÿßÿ™ÿ≠ÿ©", "verses": 7},
    {"name": "ÿßŸÑÿ®ŸÇÿ±ÿ©", "verses": 286},
    {"name": "ÿ¢ŸÑ ÿπŸÖÿ±ÿßŸÜ", "verses": 200},
    {"name": "ÿßŸÑŸÜÿ≥ÿßÿ°", "verses": 176},
    {"name": "ÿßŸÑŸÖÿßÿ¶ÿØÿ©", "verses": 120},
    {"name": "ÿßŸÑÿ£ŸÜÿπÿßŸÖ", "verses": 165},
    {"name": "ÿßŸÑÿ£ÿπÿ±ÿßŸÅ", "verses": 206},
    {"name": "ÿßŸÑÿ£ŸÜŸÅÿßŸÑ", "verses": 75},
    {"name": "ÿßŸÑÿ™Ÿàÿ®ÿ©", "verses": 129},
    {"name": "ŸäŸàŸÜÿ≥", "verses": 109},
    {"name": "ŸáŸàÿØ", "verses": 123},
    {"name": "ŸäŸàÿ≥ŸÅ", "verses": 111},
    {"name": "ÿßŸÑÿ±ÿπÿØ", "verses": 43},
    {"name": "ÿ•ÿ®ÿ±ÿßŸáŸäŸÖ", "verses": 52},
    {"name": "ÿßŸÑÿ≠ÿ¨ÿ±", "verses": 99},
    {"name": "ÿßŸÑŸÜÿ≠ŸÑ", "verses": 128},
    {"name": "ÿßŸÑÿ•ÿ≥ÿ±ÿßÿ°", "verses": 111},
    {"name": "ÿßŸÑŸÉŸáŸÅ", "verses": 110},
    {"name": "ŸÖÿ±ŸäŸÖ", "verses": 98},
    {"name": "ÿ∑Ÿá", "verses": 135},
    {"name": "ÿßŸÑÿ£ŸÜÿ®Ÿäÿßÿ°", "verses": 112},
    {"name": "ÿßŸÑÿ≠ÿ¨", "verses": 78},
    {"name": "ÿßŸÑŸÖÿ§ŸÖŸÜŸàŸÜ", "verses": 118},
    {"name": "ÿßŸÑŸÜŸàÿ±", "verses": 64},
    {"name": "ÿßŸÑŸÅÿ±ŸÇÿßŸÜ", "verses": 77},
    {"name": "ÿßŸÑÿ¥ÿπÿ±ÿßÿ°", "verses": 227},
    {"name": "ÿßŸÑŸÜŸÖŸÑ", "verses": 93},
    {"name": "ÿßŸÑŸÇÿµÿµ", "verses": 88},
    {"name": "ÿßŸÑÿπŸÜŸÉÿ®Ÿàÿ™", "verses": 69},
    {"name": "ÿßŸÑÿ±ŸàŸÖ", "verses": 60},
    {"name": "ŸÑŸÇŸÖÿßŸÜ", "verses": 34},
    {"name": "ÿßŸÑÿ≥ÿ¨ÿØÿ©", "verses": 30},
    {"name": "ÿßŸÑÿ£ÿ≠ÿ≤ÿßÿ®", "verses": 73},
    {"name": "ÿ≥ÿ®ÿ£", "verses": 54},
    {"name": "ŸÅÿßÿ∑ÿ±", "verses": 45},
    {"name": "Ÿäÿ≥", "verses": 83},
    {"name": "ÿßŸÑÿµÿßŸÅÿßÿ™", "verses": 182},
    {"name": "ÿµ", "verses": 88},
    {"name": "ÿßŸÑÿ≤ŸÖÿ±", "verses": 75},
    {"name": "ÿ∫ÿßŸÅÿ±", "verses": 85},
    {"name": "ŸÅÿµŸÑÿ™", "verses": 54},
    {"name": "ÿßŸÑÿ¥Ÿàÿ±Ÿâ", "verses": 53},
    {"name": "ÿßŸÑÿ≤ÿÆÿ±ŸÅ", "verses": 89},
    {"name": "ÿßŸÑÿØÿÆÿßŸÜ", "verses": 59},
    {"name": "ÿßŸÑÿ¨ÿßÿ´Ÿäÿ©", "verses": 37},
    {"name": "ÿßŸÑÿ£ÿ≠ŸÇÿßŸÅ", "verses": 35},
    {"name": "ŸÖÿ≠ŸÖÿØ", "verses": 38},
    {"name": "ÿßŸÑŸÅÿ™ÿ≠", "verses": 29},
    {"name": "ÿßŸÑÿ≠ÿ¨ÿ±ÿßÿ™", "verses": 18},
    {"name": "ŸÇ", "verses": 45},
    {"name": "ÿßŸÑÿ∞ÿßÿ±Ÿäÿßÿ™", "verses": 60},
    {"name": "ÿßŸÑÿ∑Ÿàÿ±", "verses": 49},
    {"name": "ÿßŸÑŸÜÿ¨ŸÖ", "verses": 62},
    {"name": "ÿßŸÑŸÇŸÖÿ±", "verses": 55},
    {"name": "ÿßŸÑÿ±ÿ≠ŸÖŸÜ", "verses": 78},
    {"name": "ÿßŸÑŸàÿßŸÇÿπÿ©", "verses": 96},
    {"name": "ÿßŸÑÿ≠ÿØŸäÿØ", "verses": 29},
    {"name": "ÿßŸÑŸÖÿ¨ÿßÿØŸÑÿ©", "verses": 22},
    {"name": "ÿßŸÑÿ≠ÿ¥ÿ±", "verses": 24},
    {"name": "ÿßŸÑŸÖŸÖÿ™ÿ≠ŸÜÿ©", "verses": 13},
    {"name": "ÿßŸÑÿµŸÅ", "verses": 14},
    {"name": "ÿßŸÑÿ¨ŸÖÿπÿ©", "verses": 11},
    {"name": "ÿßŸÑŸÖŸÜÿßŸÅŸÇŸàŸÜ", "verses": 11},
    {"name": "ÿßŸÑÿ™ÿ∫ÿßÿ®ŸÜ", "verses": 18},
    {"name": "ÿßŸÑÿ∑ŸÑÿßŸÇ", "verses": 12},
    {"name": "ÿßŸÑÿ™ÿ≠ÿ±ŸäŸÖ", "verses": 12},
    {"name": "ÿßŸÑŸÖŸÑŸÉ", "verses": 30},
    {"name": "ÿßŸÑŸÇŸÑŸÖ", "verses": 52},
    {"name": "ÿßŸÑÿ≠ÿßŸÇÿ©", "verses": 52},
    {"name": "ÿßŸÑŸÖÿπÿßÿ±ÿ¨", "verses": 44},
    {"name": "ŸÜŸàÿ≠", "verses": 28},
    {"name": "ÿßŸÑÿ¨ŸÜ", "verses": 28},
    {"name": "ÿßŸÑŸÖÿ≤ŸÖŸÑ", "verses": 20},
    {"name": "ÿßŸÑŸÖÿØÿ´ÿ±", "verses": 56},
    {"name": "ÿßŸÑŸÇŸäÿßŸÖÿ©", "verses": 40},
    {"name": "ÿßŸÑÿ•ŸÜÿ≥ÿßŸÜ", "verses": 31},
    {"name": "ÿßŸÑŸÖÿ±ÿ≥ŸÑÿßÿ™", "verses": 50},
    {"name": "ÿßŸÑŸÜÿ®ÿ£", "verses": 40},
    {"name": "ÿßŸÑŸÜÿßÿ≤ÿπÿßÿ™", "verses": 46},
    {"name": "ÿπÿ®ÿ≥", "verses": 42},
    {"name": "ÿßŸÑÿ™ŸÉŸàŸäÿ±", "verses": 29},
    {"name": "ÿßŸÑÿ•ŸÜŸÅÿ∑ÿßÿ±", "verses": 19},
    {"name": "ÿßŸÑŸÖÿ∑ŸÅŸÅŸäŸÜ", "verses": 36},
    {"name": "ÿßŸÑÿ•ŸÜÿ¥ŸÇÿßŸÇ", "verses": 25},
    {"name": "ÿßŸÑÿ®ÿ±Ÿàÿ¨", "verses": 22},
    {"name": "ÿßŸÑÿ∑ÿßÿ±ŸÇ", "verses": 17},
    {"name": "ÿßŸÑÿ£ÿπŸÑŸâ", "verses": 19},
    {"name": "ÿßŸÑÿ∫ÿßÿ¥Ÿäÿ©", "verses": 26},
    {"name": "ÿßŸÑŸÅÿ¨ÿ±", "verses": 30},
    {"name": "ÿßŸÑÿ®ŸÑÿØ", "verses": 20},
    {"name": "ÿßŸÑÿ¥ŸÖÿ≥", "verses": 15},
    {"name": "ÿßŸÑŸÑŸäŸÑ", "verses": 21},
    {"name": "ÿßŸÑÿ∂ÿ≠Ÿâ", "verses": 11},
    {"name": "ÿßŸÑÿ¥ÿ±ÿ≠", "verses": 8},
    {"name": "ÿßŸÑÿ™ŸäŸÜ", "verses": 8},
    {"name": "ÿßŸÑÿπŸÑŸÇ", "verses": 19},
    {"name": "ÿßŸÑŸÇÿØÿ±", "verses": 5},
    {"name": "ÿßŸÑÿ®ŸäŸÜÿ©", "verses": 8},
    {"name": "ÿßŸÑÿ≤ŸÑÿ≤ŸÑÿ©", "verses": 8},
    {"name": "ÿßŸÑÿπÿßÿØŸäÿßÿ™", "verses": 11},
    {"name": "ÿßŸÑŸÇÿßÿ±ÿπÿ©", "verses": 11},
    {"name": "ÿßŸÑÿ™ŸÉÿßÿ´ÿ±", "verses": 8},
    {"name": "ÿßŸÑÿπÿµÿ±", "verses": 3},
    {"name": "ÿßŸÑŸáŸÖÿ≤ÿ©", "verses": 9},
    {"name": "ÿßŸÑŸÅŸäŸÑ", "verses": 5},
    {"name": "ŸÇÿ±Ÿäÿ¥", "verses": 4},
    {"name": "ÿßŸÑŸÖÿßÿπŸàŸÜ", "verses": 7},
    {"name": "ÿßŸÑŸÉŸàÿ´ÿ±", "verses": 3},
    {"name": "ÿßŸÑŸÉÿßŸÅÿ±ŸàŸÜ", "verses": 6},
    {"name": "ÿßŸÑŸÜÿµÿ±", "verses": 3},
    {"name": "ÿßŸÑŸÖÿ≥ÿØ", "verses": 5},
    {"name": "ÿßŸÑÿ•ÿÆŸÑÿßÿµ", "verses": 4},
    {"name": "ÿßŸÑŸÅŸÑŸÇ", "verses": 5},
    {"name": "ÿßŸÑŸÜÿßÿ≥", "verses": 6},
  ];

  // ÿØÿßŸÑÿ© ÿ™ÿ∑ÿ®Ÿäÿπ ÿßŸÑÿ≠ÿ±ŸàŸÅ ÿßŸÑÿπÿ±ÿ®Ÿäÿ© ŸÑŸÑÿ®ÿ≠ÿ´ ÿßŸÑÿ∞ŸÉŸä
  String _normalizeArabic(String text) {
    return text
        .replaceAll('ÿ£', 'ÿß')
        .replaceAll('ÿ•', 'ÿß')
        .replaceAll('ÿ¢', 'ÿß')
        .replaceAll('Ÿ±', 'ÿß')
        .replaceAll('ÿ©', 'Ÿá')
        .replaceAll('Ÿâ', 'Ÿä')
        .replaceAll('ÿ¶', 'Ÿä')
        .replaceAll('ÿ§', 'Ÿà')
    // ÿ•ÿ≤ÿßŸÑÿ© ÿßŸÑÿ™ÿ¥ŸÉŸäŸÑ
        .replaceAll(RegExp(r'[\u064B-\u065F]'), '')
    // ÿ•ÿ≤ÿßŸÑÿ© ÿßŸÑŸÖÿ≥ÿßŸÅÿßÿ™
        .replaceAll(' ', '');
  }

  // ÿßŸÑÿ™ÿ≠ŸÇŸÇ ÿ•ÿ∞ÿß ŸÉÿßŸÜÿ™ ÿßŸÑÿ≥Ÿàÿ±ÿ© ŸÖÿ™ÿßÿ≠ÿ© ŸÑŸÑÿßÿÆÿ™Ÿäÿßÿ±
  bool _isSurahEnabled(int index) {
    if (widget.fromSurah == null) return true;

    final fromIndex = surahs.indexWhere(
          (s) => s["name"] == widget.fromSurah,
    );

    if (fromIndex == -1) return true;

    return index >= fromIndex;
  }

  // ŸÅŸÑÿ™ÿ±ÿ© ÿßŸÑÿ≥Ÿàÿ± ÿ®ŸÜÿßÿ°Ÿã ÿπŸÑŸâ ÿßŸÑÿ®ÿ≠ÿ´
  List<Map<String, dynamic>> get _filteredSurahs {
    if (_searchQuery.isEmpty) return surahs;

    final normalizedQuery = _normalizeArabic(_searchQuery.toLowerCase());

    return surahs.where((surah) {
      final normalizedName = _normalizeArabic(surah["name"].toLowerCase());
      return normalizedName.contains(normalizedQuery);
    }).toList();
  }

  @override
  void dispose() {
    _searchController.dispose();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    return Dialog(
      shape: RoundedRectangleBorder(
        borderRadius: BorderRadius.circular(20),
      ),
      backgroundColor: Colors.transparent,
      child: Container(
        constraints: BoxConstraints(
          maxHeight: MediaQuery.of(context).size.height * 0.75,
        ),
        decoration: BoxDecoration(
          borderRadius: BorderRadius.circular(20),
          image: const DecorationImage(
            image: AssetImage('assets/images/quranBackground.jpg'),
            fit: BoxFit.cover,
          ),
        ),
        child: Container(
          decoration: BoxDecoration(
            borderRadius: BorderRadius.circular(20),
            color: Colors.white.withValues(alpha: 0.2),
          ),
          padding: const EdgeInsets.all(20),
          child: Column(
            mainAxisSize: MainAxisSize.min,
            children: [
              Text(
                "ÿßÿÆÿ™ÿ± ÿ≥Ÿàÿ±ÿ©",
                style: TextStyle(
                  fontSize: 18.sp,
                  fontWeight: FontWeight.bold,
                  color: Colors.green[700],
                ),
              ),
              const SizedBox(height: 10),
              SizedBox(
                height: 45,
                child: SearchBar(
                  surfaceTintColor: WidgetStateProperty.all(Colors.transparent),
                  controller: _searchController,
                  hintStyle: WidgetStateProperty.all(
                    TextStyle(
                      color: Colors.grey[600],
                      fontSize: 13.sp,
                      fontFamily: "Cairo",
                    ),
                  ),
                  textStyle: WidgetStateProperty.all(
                    TextStyle(
                      color: Colors.green[700],
                      fontSize: 14.sp,
                      fontFamily: "Cairo",
                    ),
                  ),
                  trailing: [
                    IconButton(
                      onPressed: () {
                        setState(() {
                          _searchController.clear();
                          _searchQuery = '';
                        });
                      },
                      icon: const Icon(Icons.close),
                      color: Colors.green[600],
                    ),
                  ],
                  backgroundColor: WidgetStateProperty.all(Colors.white),
                  hintText: "ÿßÿ®ÿ≠ÿ´ ÿπŸÜ ÿ≥Ÿàÿ±ÿ©...",
                  onTapOutside: (_) {
                    FocusManager.instance.primaryFocus?.unfocus();
                  },
                  leading: Icon(
                    Icons.search_outlined,
                    size: 20.sp,
                    color: Colors.green[600],
                  ),
                  onChanged: (value) {
                    setState(() {
                      _searchQuery = value;
                    });
                  },
                ),
              ),
              const SizedBox(height: 2),
              Flexible(
                child: SizedBox(
                  width: double.maxFinite,
                  child: _filteredSurahs.isEmpty
                      ? Center(
                    child: Text(
                      "ŸÑÿß ÿ™Ÿàÿ¨ÿØ ŸÜÿ™ÿßÿ¶ÿ¨",
                      style: TextStyle(
                        fontSize: 16.sp,
                        color: Colors.green[600],
                        fontFamily: "Amiri",
                      ),
                    ),
                  )
                      : ListView.separated(
                    shrinkWrap: true,
                    itemCount: _filteredSurahs.length,
                    separatorBuilder: (_, __) => Divider(
                      color: Colors.green[200],
                      height: 1,
                    ),
                    itemBuilder: (context, index) {
                      final surah = _filteredSurahs[index];
                      final originalIndex = surahs.indexOf(surah);
                      final isEnabled = _isSurahEnabled(originalIndex);

                      return ListTile(
                        enabled: isEnabled,
                        title: Text(
                          "${index+1}. ${surah["name"]}",
                          textAlign: TextAlign.center,
                          style: TextStyle(
                            fontSize: 16.sp,
                            color: isEnabled
                                ? Colors.green[700]
                                : Colors.grey[400],
                            fontWeight: FontWeight.w600,
                            fontFamily: "Amiri",
                          ),
                        ),
                        onTap: isEnabled
                            ? () {
                          Navigator.pop(context);
                          widget.onSurahSelected(
                            surah["name"],
                            surah["verses"],
                          );
                        }
                            : null,
                      );
                    },
                  ),
                ),
              ),
            ],
          ),
        ),
      ),
    );
  }
}